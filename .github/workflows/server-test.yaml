on:
  pull_request:
    branches: [ main, master ]
    paths:
      - 'server/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
      
    - name: Run docker-compose up
      run: |
        docker-compose -f docker-compose.test.yml up -d
      env:
        DB_NAME_SERVER: sebastian_test
        DB_USER_SERVER: test_user
        DB_PASSWORD_SERVER: test_password
        DB_PORT: 5432
    
    - name: Debug - Check PostgreSQL connection
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        echo "Attempting to connect to PostgreSQL..."
        count=0
        max_attempts=50
        while [ $count -lt $max_attempts ]; do
          if PGPASSWORD=test_password pg_isready -h localhost -U test_user -d sebastian_test > /dev/null 2>&1; then
            echo "Connection attempt successful."
            break
          else
            echo "Connection attempt failed. Retrying in 2 seconds..."
            sleep 2
            count=$((count + 1))
          fi
        done
        
        if [ $count -eq $max_attempts ]; then
          echo "Failed to connect after $max_attempts attempts."
          exit 1
        fi

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd server
        npm ci

    - name: Setup Database
      run: |
        cd server
        node setup/create_database.js
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER_ADMIN: test_user
        DB_PASSWORD_ADMIN: test_password
        DB_NAME_SERVER: sebastian_test
        DB_USER_SERVER: test_user
        DB_PASSWORD_SERVER: test_password
        APP_ENV: test

    - name: Run migrations
      run: |
        cd server
        npx knex migrate:latest --env test
      env:
        DB_NAME_SERVER: sebastian_test
        DB_USER_SERVER: test_user
        DB_PASSWORD_SERVER: test_password
        DB_HOST: localhost
        DB_PORT: 5432
        NODE_ENV: test

    - name: Run Vitest tests
      run: |
        cd server
        npm test
      env:
        DB_NAME_SERVER: sebastian_test
        DB_USER_SERVER: test_user
        DB_PASSWORD_SERVER: test_password
        DB_HOST: localhost
        DB_PORT: 5432
        NODE_ENV: test
        DB_TYPE: postgres
        APP_ENV: test

    - name: Build
      run: |
        cd server
        npm run build
      env:
        NODE_ENV: production
        DB_NAME_SERVER: sebastian_test
        DB_USER_SERVER: test_user
        DB_PASSWORD_SERVER: test_password
        DB_HOST: localhost
        DB_PORT: 5432
        DB_TYPE: postgres
        APP_ENV: test
